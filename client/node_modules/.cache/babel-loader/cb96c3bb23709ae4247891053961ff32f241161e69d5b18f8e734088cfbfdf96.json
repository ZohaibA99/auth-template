{"ast":null,"code":"import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport userReducer from './user/userSlice.js';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst rootReducer = combineReducers({\n  user: userReducer\n});\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false\n  })\n});\nexport const persistor = persistStore(store);\n\n// import {combineReducers, configureStore} from '@reduxjs/toolkit';\n// import userReducer from \"../redux/user/userSlice.js\";\n// import {persistReducer, persistStore} from \"redux-persist\";\n// import storage from 'redux-persist/lib/storage';\n\n// const rootReducer = combineReducers({\n//     user: userReducer,\n// })\n\n// const persistConfig = {\n//     key: 'root',\n//     version: 1,\n//     storage,\n// }\n\n// const persistedReducer = persistReducer({persistConfig, rootReducer })\n\n// export const store = configureStore({\n//     reducer: persistedReducer,\n//     middleware: (getDefaultMiddleware) => \n//         getDefaultMiddleware({\n//             serializableCheck: false,\n//         }),\n\n// });\n\n// export const persistor = persistStore(store);","map":{"version":3,"names":["combineReducers","configureStore","userReducer","persistReducer","persistStore","storage","rootReducer","user","persistConfig","key","version","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","persistor"],"sources":["/Users/zohaibasif/Desktop/GitHub/auth-template/client/src/redux/store.js"],"sourcesContent":["import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport userReducer from './user/userSlice.js';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst rootReducer = combineReducers({ user: userReducer });\n\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n    }),\n});\n\nexport const persistor = persistStore(store);\n\n// import {combineReducers, configureStore} from '@reduxjs/toolkit';\n// import userReducer from \"../redux/user/userSlice.js\";\n// import {persistReducer, persistStore} from \"redux-persist\";\n// import storage from 'redux-persist/lib/storage';\n\n// const rootReducer = combineReducers({\n//     user: userReducer,\n// })\n\n// const persistConfig = {\n//     key: 'root',\n//     version: 1,\n//     storage,\n// }\n\n// const persistedReducer = persistReducer({persistConfig, rootReducer })\n\n// export const store = configureStore({\n//     reducer: persistedReducer,\n//     middleware: (getDefaultMiddleware) => \n//         getDefaultMiddleware({\n//             serializableCheck: false,\n//         }),\n\n// });\n\n// export const persistor = persistStore(store);"],"mappings":"AAAA,SAASA,eAAe,EAAEC,cAAc,QAAQ,kBAAkB;AAClE,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,SAASC,cAAc,EAAEC,YAAY,QAAQ,eAAe;AAC5D,OAAOC,OAAO,MAAM,2BAA2B;AAE/C,MAAMC,WAAW,GAAGN,eAAe,CAAC;EAAEO,IAAI,EAAEL;AAAY,CAAC,CAAC;AAE1D,MAAMM,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXC,OAAO,EAAE,CAAC;EACVL;AACF,CAAC;AAED,MAAMM,gBAAgB,GAAGR,cAAc,CAACK,aAAa,EAAEF,WAAW,CAAC;AAEnE,OAAO,MAAMM,KAAK,GAAGX,cAAc,CAAC;EAClCY,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;EACrB,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,MAAMC,SAAS,GAAGb,YAAY,CAACQ,KAAK,CAAC;;AAE5C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}